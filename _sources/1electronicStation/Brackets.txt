Brackets
==============

task_Brackets_

.. _task_Brackets: http://www.checkio.org/mission/brackets/

You are given an expression with numbers, brackets and operators. For this task only the brackets matter. Brackets come in three flavors: "{}" "()" or "[]". Brackets are used to determine scope or to restrict some expression. If a bracket is open, then it must be closed with a closing bracket of the same type. The scope of a bracket must not intersected by another bracket. For this task, you should to make a decision to correct an expression or not based on the brackets. Do not worry about operators and operands.

**Input:** An expression with different of types brackets as a string (unicode).

**Output:** A verdict on the correctness of the expression in boolean (True or False).

**Example:**

.. code-block:: python

    checkio("((5+3)*2+1)") == True
    checkio("{[(3+1)+2]+}") == True
    checkio("(3+{1-1)}") == False
    checkio("[1+1]+(2*2)-{3/3}") == True

**Precondition:** 

    | There are only brackets ("{}" "()" or "[]"), digits or operators ("+" "-" "*" "/").
    | 0 < len(expression) < 10e3

**Solution:**

.. code-block:: python

    def checkio(data):
        bracketmap = {')':'(',']':'[','}':'{'}
        stack = []
        for c in data:
            if c in bracketmap.values():
                stack.append(c)
            elif c in bracketmap.keys():
                if stack and stack[-1]==bracketmap[c]:
                    stack.pop()
                else:
                    return False
        return False if stack else True