Loading Cargo
=============================

task_LoadingCargo_

.. _task_LoadingCargo: http://www.checkio.org/mission/loading-cargo/

You have been given a list of integer weights. You should help Stephen distribute these weights into two sets, such that the difference between the total weight of each set is as low as possible.

**Input:** A list of the weights as a list of integers.

**Output:** The number representing the lowest possible weight difference as a positive integer.

**Example:**

.. code-block:: python

    checkio([10,10]) == 0
    checkio([10]) == 10
    checkio([5, 8, 13, 27, 14]) == 3
    checkio([5,5,6,5]) == 1
    checkio([12, 30, 30, 32, 42, 49]) == 9
    checkio([1, 1, 1, 3]) == 0

**Precondition:** 

    | 0 < len(weights) â‰¤ 10
    | all(0 < x < 100 for x in weights)

**Solution:**

.. code-block:: python

    def checkio(data):
        data.sort()
        maxvol = sum(data)/2
        
        def optseq(seq, vol):
            if sum(seq)<=vol:
                return sum(seq)
            else:
                w1 = optseq(seq[:-1], vol)
                w2 = seq[-1]<=vol and optseq(seq[:-1], vol-seq[-1])+seq[-1] or 0
                return max(w1, w2)

        return abs(2*optseq(data, maxvol)-sum(data))